# --- GENERAL -----------------------------

# Custom prefix
set -g prefix C-q
bind C-q send-prefix
unbind C-b

# Tmux >= 2.1
# enable mouse
setw -g mouse on
# fix mouse scrolling: enter copy mode on scroll-up, exits it when scrolled to bottom
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

# --- DISPLAY -----------------------------

set -g set-titles off
set -g status-position top

# Zero-based indexing is fine in programming languages, but not so much in a multiplexer
# when zero is on the other side of the keyboard.
set -g base-index 1
setw -g pane-base-index 1

setw -g automatic-rename on # rename window to reflect current program
set -g renumber-windows on  # renumber windows when a window is closed
# display tmux messages longer
set -g display-panes-time 800

# focus events enabled for terminals that support them
set -g focus-events on


# --- KEYBINDS ----------------------------

# set vi keys
setw -g mode-keys vi

setw -g xterm-keys on
set -sg repeat-time 600

## Pane management
# Saner splitting commands
unbind %
unbind '"'
bind s split-window -c "#{pane_current_path}" -v
bind v split-window -c "#{pane_current_path}" -h
bind c new-window -c "#{pane_current_path}"

# break pane into a window
bind = select-layout even-vertical
bind + select-layout even-horizontal
bind - break-pane
bind _ join-pane

# reload config without killing server
bind r source-file $TMUX_HOME/tmux.conf \; display-message "  Config reloaded..".
bind ^r refresh-client

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind C-w last-pane

# Pane resizing
bind C-h resize-pane -L 6
bind C-j resize-pane -D 6
bind C-k resize-pane -U 6
bind C-l resize-pane -R 6
bind -n M-h resize-pane -L 6
bind -n M-j resize-pane -D 6
bind -n M-k resize-pane -U 6
bind -n M-l resize-pane -R 6

# Swap panes directionally
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind H run '$TMUX_HOME/scripts/swap-pane left'
bind J run '$TMUX_HOME/scripts/swap-pane down'
bind K run '$TMUX_HOME/scripts/swap-pane up'
bind L run '$TMUX_HOME/scripts/swap-pane right'
bind M run '$TMUX_HOME/scripts/swap-pane master'

bind o resize-pane -Z
bind / choose-session
bind . choose-window

bind n run 'TMUX= tmux new-session -t "$(basename \"$PWD\")" -d \; switch-client -t "$(basename \"$PWD\")"'

# switch between sessions
bind -r e switch-client -l

# Disable confirmation
bind x kill-pane
bind X kill-window
bind q kill-session
bind Q kill-server


# --- COPY MODE ---------------------------

bind Enter copy-mode # enter copy mode
bind b list-buffers  # list paster buffers
bind p paste-buffer  # paste from the top pate buffer
bind P choose-buffer # choose which buffer to paste from

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line


# --- CUSTOM ------------------------------

# Support user overrides
if '[ -f ~/.tmux.conf ]' 'source ~/.tmux.conf'

# Plugins
set -g @plugin 'catppuccin/tmux'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'CrispyConductor/tmux-copy-toolkit'
set -g @plugin 'trevarj/tmux-open-nvim'
set -g @plugin 'omerxx/tmux-sessionx'

set -g @sessionx-bind C-o
set -g @resurrect-save 'z'
set -g @continuum-restore 'on'

set -g @catppuccin_status_modules_right "date_time application"
set -g @catppuccin_status_modules_left "session"
set -g @catppuccin_status_left_separator "█"
set -g @catppuccin_status_right_separator "█"
set -g @catppuccin_window_current_text "#{b:pane_current_path}#{?window_zoomed_flag,  ,}"
set -g @catppuccin_window_default_text "#{b:pane_current_path}#{?window_zoomed_flag,  ,}"
set -g @catppuccin_status_fill "all"
set -g @prefix_highlight_fg colour4
set -g @prefix_highlight_output_suffix ' #[bg=colour8] '

# Start plugin manager
run '$TMUX_PLUGINS_HOME/tpm/tpm'

# --- OVERRIDE THEMES ---------------------
set -g status-bg default
set -g status-style bg=default
set -g status 2
set -g status-format[1] ''
